// Generated by CoffeeScript 1.10.0
(function() {
  var LocaleService, fs, isAuthenticated, localizationDebug, parser, router, uploaderDebug;

  router = require('express').Router();

  uploaderDebug = require('debug')('uploader');

  localizationDebug = require('debug')('localization');

  fs = require('fs');

  localizationDebug('Importing Lua parser controller');

  parser = appReq("/controllers/lua-parser/parser");

  localizationDebug('Importing isAuthenticated function from passport');

  isAuthenticated = appReq("/controllers/authentication/passport-auth").isAuthenticated;

  localizationDebug('Importing Locale service');

  LocaleService = appReq("/services/locale-service");

  router.get('/', isAuthenticated, function(req, res) {
    localizationDebug('GET localization/');
    localizationDebug('Retrieving all locales from the dabatase');
    LocaleService.findAll().then(function(locales) {
      localizationDebug('Found locales', locales);
      localizationDebug('Rendering view');
      return res.render("localization/index", {
        user: req.user,
        locales: locales
      });
    });
    return function(error) {
      localizationDebug('Error while retrieving locales', error);
      return res.render("error", {
        message: "An error has occurred while loading data from the database."
      });
    };
  });

  router.post('/upload', isAuthenticated, function(req, res, next) {
    uploaderDebug('POST localization/upload');
    uploaderDebug('Recevied files', req.files);
    uploaderDebug('Reading file from path', req.files.file.path);
    return fs.readFile(req.files.file.path, 'utf8', function(err, data) {
      var locale;
      if (err) {
        throw err;
      }
      uploaderDebug('Successufly read file. Content :', data);
      uploaderDebug('Deleting file');
      fs.unlink(req.files.file.path);
      uploaderDebug('Updating/inserting locale in database');
      locale = LocaleService.updateLocale(parser.parseLocale(data));
      uploaderDebug('Outputing locale JSON');
      return res.json(locale);
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=localization.js.map
