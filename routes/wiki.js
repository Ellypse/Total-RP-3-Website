// Generated by CoffeeScript 1.10.0
(function() {
  var User, _s, config, debug, express, fs, marked, moment, path, raneto, router, validator;

  express = require('express');

  router = express.Router();

  path = require("path");

  fs = require('fs');

  _s = require('underscore.string');

  moment = require('moment');

  marked = require('marked');

  validator = require('validator');

  debug = require("debug")("wiki");

  raneto = appReq('/controllers/raneto-custom');

  config = appReq("/config");

  User = appReq("/services/user-service");

  router.get('/*', function(req, res, next) {
    var filePath, pageList, pageListSearch, ref, requestedPage, searchQuery, searchResults, username;
    username = req.user.username != null;
    if (req.query.search) {
      searchQuery = validator.toString(validator.escape(_s.stripTags(req.query.search))).trim();
      searchResults = raneto.doSearch(searchQuery);
      pageListSearch = raneto.getPages('');
      return res.render('wiki/search.jade', {
        config: config.wiki,
        pages: pageListSearch,
        search: searchQuery,
        searchResults: searchResults,
        body_class: 'page-search',
        battleTag: username
      });
    } else {
      requestedPage = (ref = req.params[0]) != null ? ref : "/index";
      pageList = raneto.getPages(requestedPage);
      filePath = path.normalize(raneto.config.content_dir + requestedPage);
      if (!fs.existsSync(filePath)) {
        filePath += '.md';
      }
      return fs.readFile(filePath, 'utf8', function(err, content) {
        var html, markdownContent, meta, stat;
        if (err) {
          err.status = '404';
          err.message = 'Whoops. Looks like this page doesn\'t exist.';
          return next(err);
        }
        if (path.extname(filePath === '.md')) {
          stat = fs.lstatSync(filePath);
          meta = raneto.processMeta(content);
          content = raneto.stripMeta(content);
          if (meta.title == null) {
            meta.title = raneto.slugToTitle(filePath);
          }
          markdownContent = content;
          content = raneto.processVars(markdownContent);
          html = marked(content);
          meta.description = html.replace(/<(?:.|\n)*?>/gm, '').substring(0, 250);
          meta.description += "â€¦";
          return res.render('./wiki/page.jade', {
            config: config.wiki,
            pages: pageList,
            meta: meta,
            content: html,
            markdownContent: markdownContent,
            body_class: 'page-' + raneto.cleanString(slug),
            last_modified: moment(stat.mtime).format('Do MMM YYYY'),
            username: username
          });
        } else {
          return res.sendfile(filePath);
        }
      });
    }
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=wiki.js.map
