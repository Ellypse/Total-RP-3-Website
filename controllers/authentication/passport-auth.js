// Generated by CoffeeScript 1.10.0
(function() {
  var BnetStrategy, User, bnetConfig, debug, passport;

  debug = require('debug')('authentication');

  passport = require('passport');

  BnetStrategy = require('passport-bnet').Strategy;

  debug('Importing Battle.net configuration');

  bnetConfig = appReq('/controllers/authentication/battlenet-config');

  debug('Battle.net configuration', bnetConfig);

  debug('Importing user service');

  User = appReq('/services/user-service');

  passport.use(new BnetStrategy(bnetConfig, function(accessToken, refreshToken, profile, done) {
    debug('Battle.net authentication');
    debug('accessToken', accessToken);
    debug('refreshToken', refreshToken);
    debug('profile', profile);
    return done(null, {
      accessToken: accessToken,
      battlenet: profile
    });
  }));

  passport.serializeUser(function(user, done) {
    debug('Serializing user', user);
    return done(null, user.battlenet.id);
  });

  passport.deserializeUser(function(userId, done) {
    debug('Deserializing user from user ID', userId);
    debug('Fetching database for user with ID', userId);
    return User.findById(userId, function(err, user) {
      debug('User found', user);
      return done(null, user);
    });
  });

  passport.isAuthenticated = function(req, res, next) {
    debug('Checking if current user is authenticated');
    if (req.user) {
      debug('User is authenticated');
    }
    if (req.user) {
      return next();
    }
    debug('User is not authenticated');
    debug('Storing request URL in session for later', req.originalUrl);
    req.session.destination = req.originalUrl;
    debug('Redirecting user to the login page');
    return res.redirect('/user/login');
  };

  module.exports = passport;

}).call(this);

//# sourceMappingURL=passport-auth.js.map
